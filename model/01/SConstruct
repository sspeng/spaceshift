from rsf.proj import *

nz=50
nx=40
dz=5	#unit: m
dx=5	#unit: m

Flow('layer1',None,'math output=1600 n1=20 n2=%d d1=5 d2=5' % nx)
Flow('block1',None,'math output=1600 n1=10 n2=10 d1=5 d2=5')
Flow('block2',None,'math output=1800 n1=10 n2=20 d1=5 d2=5')
Flow('block3',None,'math output=1600 n1=10 n2=10 d1=5 d2=5')
Flow('layer2','block1 block2 block3','cat axis=2 ${SOURCES[1:3]}')
Flow('layer3',None,'math output=1600 n1=20 n2=%d d1=5 d2=5' % nx)

Flow('vel','layer1 layer2 layer3','cat axis=1 ${SOURCES[1:3]}')
Plot('vel',
	'''
	sfput label1=Depth unit1=m \
	label2=Distance unit2=m |
	grey allpos=y scalebar=y color=j minval=1500 maxval=2000
	screenratio=0.45
	''')

Flow('smvel',None,
	'''
	math output=1600 n1=%d n2=%d d1=%g d2=%g
	'''%(nz,nx,dz,dx))
Plot('smvel',
     '''
	grey scalebar=y color=j minval=1500 maxval=2000
	screenratio=0.45 mean=y
     ''' )

Result('all','vel smvel','TwoRows')


Flow('shots','vel',
	'''
	sfmshots csdgather=n fm=20 amp=1 dt=0.0015 ns=8 ng=%d nt=400
	sxbeg=0 szbeg=2 jsx=4 jsz=0 gxbeg=0 gzbeg=3 jgx=1 jgz=0
	''' % nx)


Result('shots','grey color=g ')

Flow('vsnaps grads objs illums','smvel shots',
  '''
  sffwi2d shots=${SOURCES[1]} grads=${TARGETS[1]} objs=${TARGETS[2]}
  illums=${TARGETS[3]} niter=10
  ''')

######################################################################
# It is strange that MPI implementation is much slower than one core sequential implemenation.
# try: scons NP=2

#if not WhereIs('mpirun'):
    #sys.stderr.write("\nNo MPI.\n")
    #sys.exit(1)

#NP = int(ARGUMENTS.get('NP','1'))

#Flow('vsnaps grads objs illums','smvel shots',
  #'''
  #sfmpifwi vinit=${SOURCES[0]} shots=${SOURCES[1]} grads=${TARGETS[1]} objs=${TARGETS[2]}
  #illums=${TARGETS[3]} niter=10
  #''',stdin=0, np=NP)

Result('vsnaps',
  '''
  grey title="Updated velocity" allpos=y color=j pclip=100
  scalebar=y bartype=v barlabel="V" barunit="m/s"
  ''')

Result('grads','grey title="Updated gradient" scalebar=y color=j ')
Result('illums','grey title="illumination" scalebar=y color=j')

Result('objs',
  '''
  graph title="Misfit function" dash=0 plotfat=5 label1=Iteration
  label2=Objective grid=y yreverse=n
  ''')

End()
