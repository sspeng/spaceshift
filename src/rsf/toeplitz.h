/* This file is automatically generated. DO NOT EDIT! */

#ifndef _sf_toeplitz_h
#define _sf_toeplitz_h


void toeplitz (int n           /* matrix size */,
	       const double *r /* [n] top row of the matrix */, 
	       double *f       /* [n] inverted in place */,
	       double *a       /* [n] work array */);
/*< apply the solver >*/


void stoepf (int n, float r[], float g[], float f[], float a[]);
/*<
****************************************************************************
Solve a symmetric Toeplitz linear system of equations Rf=g for f
(float version) 
******************************************************************************
Input:
n		dimension of system
r		array[n] of top row of Toeplitz matrix
g		array[n] of right-hand-side column vector

Output:
f		array[n] of solution (left-hand-side) column vector
a		array[n] of solution to Ra=v (Claerbout, FGDP, p. 57)
******************************************************************************
Notes:
This routine does NOT solve the case when the main diagonal is zero, it
just silently returns.

The left column of the Toeplitz matrix is assumed to be equal to the top
row (as specified in r); i.e., the Toeplitz matrix is assumed symmetric.
******************************************************************************
Author:  Dave Hale, Colorado School of Mines, 06/02/89
****************************************************************************>*/

#endif
